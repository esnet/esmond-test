#!/usr/bin/env python

"""
Load json files of esxsnmp data into cassandra in a fashion similar to test framework.

Should be run from directory containing the esxsnmp.db testing metadata file.
"""
import json
import os
import os.path
import sys

from optparse import OptionParser

from esxsnmp.api.tests import TestPersistQueue
from esxsnmp.config import get_config, get_config_path
from esxsnmp.persist import CassandraPollPersister, TSDBPollPersister
from esxsnmp.cassandra import CASSANDRA_DB, INVALID_VALUE
from pycassa.columnfamily import ColumnFamily

usage = '%prog -f FILE'
desc = ' '.join(__doc__.split())
parser = OptionParser(usage=usage, description=desc)
parser.add_option('-f', '--infile', dest='filename', metavar='FILE', default="",
                  help='Read FILE containing esxsnmp json data.')
options, args = parser.parse_args()

if not options.filename:
    parser.error('A filename is required')

file_path = os.path.normpath(options.filename)

if not os.path.exists(file_path):
    print file_path, 'does not exist - exiting.'
    sys.exit()
    
db_path = os.path.normpath(os.path.join(os.getcwd(), 'esxsnmp.db'))

if not os.path.exists(db_path):
    parser.error('Run from directory containing testing esxsnmp.db')
    
test_data = json.loads(open(file_path).read())

print 'Loaded:', test_data[0]['device_name'], test_data[0]['oidset_name'], 'etc...'

config = get_config(get_config_path())

if not config.db_clear_on_testing and os.environ.get("ESXSNMP_TESTING", False):
    print """
    The db_clear_on_testing config value is set to False.  Be aware that loading 
    the same data multiple times in this mode will generate incorrect base
    rate values.
    """

q = TestPersistQueue(test_data)
p = CassandraPollPersister(config, "test", persistq=q)
p.run()
p.db.flush()
p.db.stats.report('all')

#test_data = json.loads(open(file_path).read())
#q = TestPersistQueue(test_data)
#p = TSDBPollPersister(config, "test", persistq=q)
#p.run()
